{"index.js":"function chunkArrayInGroups(arr, size) {\n  var newArray = [];\n  var chunk = [];\n\n  for (var a = 0; a < arr.length; a++) {\n    if (a % size !== size - 1) newArray.push(arr[a]);\n    else {\n      newArray.push(arr[a]);\n      chunk.push(newArray);\n      newArray = [];\n    }\n  }\n\n  if (newArray.length !== 0) chunk.push(newArray);\n  return chunk;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2); // should return [[\"a\", \"b\"], [\"c\", \"d\"]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 3); // should return [[0, 1, 2], [3, 4, 5]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 2); // should return [[0, 1], [2, 3], [4, 5]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5], 4); // should return [[0, 1, 2, 3], [4, 5]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6], 3); // should return [[0, 1, 2], [3, 4, 5], [6]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 4); // should return [[0, 1, 2, 3], [4, 5, 6, 7], [8]].\nchunkArrayInGroups([0, 1, 2, 3, 4, 5, 6, 7, 8], 2); // should return [[0, 1], [2, 3], [4, 5], [6, 7], [8]]."}