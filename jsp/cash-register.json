{"index.js":"// Create an array of objects which hold the denominations and their values\nvar denom = [\n  { name: \"ONE HUNDRED\", val: 100.0 },\n  { name: \"TWENTY\", val: 20.0 },\n  { name: \"TEN\", val: 10.0 },\n  { name: \"FIVE\", val: 5.0 },\n  { name: \"ONE\", val: 1.0 },\n  { name: \"QUARTER\", val: 0.25 },\n  { name: \"DIME\", val: 0.1 },\n  { name: \"NICKEL\", val: 0.05 },\n  { name: \"PENNY\", val: 0.01 }\n];\n\nfunction checkCashRegister(price, cash, cid) {\n  var output = { status: null, change: [] };\n  var change = cash - price;\n\n  // Transform CID array into drawer object\n  var register = cid.reduce(\n    function(acc, curr) {\n      acc.total += curr[1];\n      acc[curr[0]] = curr[1];\n      return acc;\n    },\n    { total: 0 }\n  );\n\n  // Handle exact change\n  if (register.total === change) {\n    output.status = \"CLOSED\";\n    output.change = cid;\n    return output;\n  }\n\n  // Handle obvious insufficient funds\n  if (register.total < change) {\n    output.status = \"INSUFFICIENT_FUNDS\";\n    return output;\n  }\n\n  // Loop through the denomination array\n  var change_arr = denom.reduce(function(acc, curr) {\n    var value = 0;\n    // While there is still money of this type in the drawer\n    // And while the denomination is larger than the change remaining\n    while (register[curr.name] > 0 && change >= curr.val) {\n      change -= curr.val;\n      register[curr.name] -= curr.val;\n      value += curr.val;\n\n      // Round change to the nearest hundreth deals with precision errors\n      change = Math.round(change * 100) / 100;\n    }\n    // Add this denomination to the output only if any was used.\n    if (value > 0) {\n      acc.push([curr.name, value]);\n    }\n    return acc; // Return the current change_arr\n  }, []); // Initial value of empty array for reduce\n\n  // If there are no elements in change_arr or we have leftover change, return\n  // the string \"Insufficient Funds\"\n  if (change_arr.length < 1 || change > 0) {\n    output.status = \"INSUFFICIENT_FUNDS\";\n    return output;\n  }\n\n  // Here is your change, ma'am.\n  output.status = \"OPEN\";\n  output.change = change_arr;\n  return output;\n}\n\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 1.01],\n  [\"NICKEL\", 2.05],\n  [\"DIME\", 3.1],\n  [\"QUARTER\", 4.25],\n  [\"ONE\", 90],\n  [\"FIVE\", 55],\n  [\"TEN\", 20],\n  [\"TWENTY\", 60],\n  [\"ONE HUNDRED\", 100]\n]); // shoule return an object\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 1.01],\n  [\"NICKEL\", 2.05],\n  [\"DIME\", 3.1],\n  [\"QUARTER\", 4.25],\n  [\"ONE\", 90],\n  [\"FIVE\", 55],\n  [\"TEN\", 20],\n  [\"TWENTY\", 60],\n  [\"ONE HUNDRED\", 100]\n]); // should return an object.\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 1.01],\n  [\"NICKEL\", 2.05],\n  [\"DIME\", 3.1],\n  [\"QUARTER\", 4.25],\n  [\"ONE\", 90],\n  [\"FIVE\", 55],\n  [\"TEN\", 20],\n  [\"TWENTY\", 60],\n  [\"ONE HUNDRED\", 100]\n]); // should return {status: \"OPEN\", change: [[\"QUARTER\", 0.5]]}.\ncheckCashRegister(3.26, 100, [\n  [\"PENNY\", 1.01],\n  [\"NICKEL\", 2.05],\n  [\"DIME\", 3.1],\n  [\"QUARTER\", 4.25],\n  [\"ONE\", 90],\n  [\"FIVE\", 55],\n  [\"TEN\", 20],\n  [\"TWENTY\", 60],\n  [\"ONE HUNDRED\", 100]\n]); // should return {status: \"OPEN\", change: [[\"TWENTY\", 60], [\"TEN\", 20], [\"FIVE\", 15], [\"ONE\", 1], [\"QUARTER\", 0.5], [\"DIME\", 0.2], [\"PENNY\", 0.04]]}.\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 0.01],\n  [\"NICKEL\", 0],\n  [\"DIME\", 0],\n  [\"QUARTER\", 0],\n  [\"ONE\", 0],\n  [\"FIVE\", 0],\n  [\"TEN\", 0],\n  [\"TWENTY\", 0],\n  [\"ONE HUNDRED\", 0]\n]); // should return {status: \"INSUFFICIENT_FUNDS\", change: []}.\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 0.01],\n  [\"NICKEL\", 0],\n  [\"DIME\", 0],\n  [\"QUARTER\", 0],\n  [\"ONE\", 1],\n  [\"FIVE\", 0],\n  [\"TEN\", 0],\n  [\"TWENTY\", 0],\n  [\"ONE HUNDRED\", 0]\n]); // should return {status: \"INSUFFICIENT_FUNDS\", change: []}.\ncheckCashRegister(19.5, 20, [\n  [\"PENNY\", 0.5],\n  [\"NICKEL\", 0],\n  [\"DIME\", 0],\n  [\"QUARTER\", 0],\n  [\"ONE\", 0],\n  [\"FIVE\", 0],\n  [\"TEN\", 0],\n  [\"TWENTY\", 0],\n  [\"ONE HUNDRED\", 0]\n]); // should return {status: \"CLOSED\", change: [[\"PENNY\", 0.5], [\"NICKEL\", 0], [\"DIME\", 0], [\"QUARTER\", 0], [\"ONE\", 0], [\"FIVE\", 0], [\"TEN\", 0], [\"TWENTY\", 0], [\"ONE HUNDRED\", 0]]}.\n"}